% function simpleROCanalysis
clear all
close all


R = dlmread('ProcessedFixations.txt');

% remove inital fixation
R(R(:,3)==1,:) = [];

% remove NaNs
R(isnan(R(:,6)),:) = [];
R(isnan(R(:,7)),:) = [];

% centre of image should = [0,0], and transform to a square of width 2
fixX = (R(:,6) - 400)/400;
fixY = (R(:,7) - 300)/400;

nfix = length(fixX);
% 
% figure('position', [0 0 1200 600])
% subplot(1,2,1);
% b = 0.05;
% plot(-1:b:1, hist(fixX, -1:b:1), '-o')
% hold all
% plot(-1:b:1, hist(fixY, -1:b:1), '-o')
% clear b
% legend('x-axis', 'y-axis')
% now calculate how far each fix is away from the centre based on some
% different metrics


A = [1, 1.33, 1.52];
M = 1:0.1:3.5;
uniX = 2*(rand(nfix,1) - 0.5);
uniY = 1.5*(rand(nfix,1) - 0.5);
C = [ones(nfix,1); zeros(nfix,1)];
for a = 1:length(A)
    for m = 1:length(M)
        
    alpha = A(a);    
    mui = M(m);
    
    % compute distance from points to centre of image
    D = pdist2([fixX alpha*fixY; uniX alpha*uniY], [0 0], 'minkowski', mui);
    
    [b,dev,stats] = glmfit(D, C, 'binomial');
    yfit = glmval(b, D, 'logit');
    [X,Y,T,auc] = perfcurve(C,yfit,1);
    AUC(m, a) = auc;
    end
end

p1 = plot(M, AUC, 'linewidth', 2);
xlabel('minkowski exponent')
% xlabel('weight for Y in Euclidean distance');
ylabel('AUC');

legeng('even', 'asp
 export_fig clarke2013_minkowski_auc.png
